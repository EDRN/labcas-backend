LabCAS back-end INSTALLATION INSTRUCTIONS

o Prerequisites (i.e. tested with...)

Java 1.7+
Unix OS (Linux, MacOSX, ...)
Maven 2.2+

o Define environment where software will be installed

For example:

export LABCAS_HOME=/usr/local/labcas_home
	- location where all software components will be installed

export LABCAS_STAGING=/usr/local/labcas_staging
	- root location where products will be uploaded (only needed to support publishing of uploaded files)

export LABCAS_ARCHIVE=/usr/local/labcas_archive
	- location where product files will be archived
	
export PGE_ROOT=/usr/local/labcas_pges
	- location where the specific executable will be installed (possibly outside of LabCAS version control)

o Check out code from repository
(to any directory, for example ~/src)

git clone https://github.com/EDRN/labcas-backend.git

cd labcas-backend

Optionally, select a specific branch 
(not recommended unless you are a labcas-backend developer - typically, you want to work with the stable 'master' branch):
git checkout -b devel origin/devel

o Compile and install

(note: the first time you compile on a machine, it might take a long time since Maven will have to find and download 
all the dependencies to your local Maven repository. After the first time, it will go much faster).

mvn install
	- will install all back-end services to $LABCAS_HOME	
	
mvn install -Dworkflow=labcas-test
	- will install the specific configuration for the "labcas-test" workflow on top of the existing services
		
mvn install -Dworkflow=labcas-upload
	- will install the specific configuration for the "labcas-upload" workflow that publishes datasets uploaded to a staging area
		
o Start services

cd $LABCAS_HOME
./start.sh
	- starts all the labcas backend services (File Manager with Tomcat/Solr back-end, Workflow Manager, Resource Manager)

or to start a single service, for example:

cd $LABCAS_HOME/cas-workflow/bin
./wmgr start

o Test

Query Workflow Manager for available workflows:
cd $LABCAS_HOME/cas-workflow/bin
./wmgr-client -op -events -url http://localhost:9001

Query Solr:
http://<hostname>:8080/solr/
http://localhost:8080/solr/oodt-fm/select?q=*%3A*&wt=json&indent=true


o Run labcas-test workflow

cd $LABCAS_HOME/cas-workflow/bin

./wmgr-client --url http://localhost:9001 --operation --sendEvent --eventName labcas-test --metaData --key experiment 11 --key species snakes

o Trigger crawling for uploaded dataset "mydata":

./wmgr-client --url http://localhost:9001 --operation --sendEvent --eventName labcas-upload --metaData --key Dataset mydata

o Trigger metadata update for previously uploaded dataset "mydata":

./wmgr-client --url http://localhost:9001 --operation --sendEvent --eventName labcas-update --metaData --key Dataset mydata

Each metadata field contained in the file "DatasetMetadata.xml" will be updated, completely replacing all previous values for that field.
To insert multiple values for the same field, simply specify multiple "<keyval>" elements. To completely remove all values for a field, 
leave the "<val>" empty.

Example of DatasetMetadata.xml:

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<cas:metadata xmlns:cas="http://oodt.jpl.nasa.gov/1.0/cas">
	<keyval type="vector">
		<key>PI</key>
		<val></val>
	</keyval>
	<keyval type="vector">
		<key>Institution</key>
		<val>Darthmouth</val>
	</keyval>
	<keyval type="vector">
		<key>Institution</key>
		<val>Children Hospital</val>
	</keyval>
</cas:metadata>

will cause:
o the field "PI" to be removed from all macthing records
o the field "Institution" to be assigned the two possible values "Darthmouth" and "Children Hospital"



o After successful run:

- product metadata can be queried from Solr catalog:
  http://<hostname>:8080/solr/#/oodt-fm/query

- job output and logs can be inspected at:
  $LABCAS_HOME/pges/labcas-test/jobs
  $LABCAS_HOME/pges/labcas-test/output

- output file is copied to:
  $LABCAS_ARCHIVE/labcas-test/files/labcas-test-output.txt

- output file can be downloaded through the OODT Product Server:

curl --remote-name --remote-header-name 'http://localhost:8080/fmprod/data?productID=<product_id>'
wget --content-disposition 'http://localhost:8080/fmprod/data?productID=<product_id>'

o Stop services

cd $LABCAS_HOME
./stop.sh

======================================

o Upgrade installation

to only upgrade specific components: cd to the module subdirectory and mvn install, for example:
cd solr
mvn install

o Clean up

mvn clean
	- will remove all services from $LABCAS_HOME

mvn clean -Dworkflow=biomarker-discovery
	- will remove the specific workflow configuration
	
========================================

o To delete ALL records from the File Manager and underlying Solr index:

curl -s http://localhost:8080/solr/oodt-fm/update?commit=true -H "Content-Type:text/xml" --data-binary '<delete><query>*:*</query></delete>'

